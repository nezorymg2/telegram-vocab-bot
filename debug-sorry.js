const { generateBBCQuestions } = require('./services/bbcService');

async function testSorryEpisode() {
    try {
        console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–ø–∏–∑–æ–¥ "How do you say sorry?"...');
        
        const episode = {
            title: 'How do you say sorry?',
            pageUrl: 'https://www.bbc.co.uk/learningenglish/english/features/6-minute-english_2025/ep-250703'
        };
        
        const result = await generateBBCQuestions(episode);
        
        if (result && result.questions) {
            console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –≤–æ–ø—Ä–æ—Å—ã:', result.questions.length);
            result.questions.forEach((q, i) => {
                console.log(`\nüìä –í–æ–ø—Ä–æ—Å ${i+1}:`);
                console.log(`–¢–µ–∫—Å—Ç: ${q.question}`);
                console.log(`–í–∞—Ä–∏–∞–Ω—Ç—ã: ${q.options.join(', ')}`);
                console.log(`–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: ${q.correct_answer}`);
            });
        } else {
            console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–æ–ø—Ä–æ—Å—ã');
            console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç:', result);
        }
        
        console.log('\nüìú Vocabulary:');
        if (result && result.vocabulary) {
            if (Array.isArray(result.vocabulary)) {
                result.vocabulary.slice(0, 10).forEach(word => {
                    if (typeof word === 'string') {
                        console.log(`üî§ ${word} - (—Å—Ç—Ä–æ–∫–∞)`);
                    } else if (word && typeof word === 'object') {
                        console.log(`üî§ ${word.word || word.term || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'} - ${word.translation || word.definition || '–ù–µ—Ç –ø–µ—Ä–µ–≤–æ–¥–∞'}`);
                    } else {
                        console.log(`üî§ ${word} - (–¥—Ä—É–≥–æ–π —Ç–∏–ø: ${typeof word})`);
                    }
                });
            } else {
                console.log('Vocabulary –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º:', typeof result.vocabulary);
            }
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
    }
}

testSorryEpisode();
