// –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è fallback –∞–Ω–∞–ª–∏–∑–∞
// –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è showWritingAnalysisResult –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ

const fs = require('fs');

console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ fallback –∞–Ω–∞–ª–∏–∑–∞...\n');

// –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ bot.js
const botContent = fs.readFileSync('./bot.js', 'utf8');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ showAnalysisResults –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
const showAnalysisResultsUsage = botContent.match(/showAnalysisResults\(/g);
if (showAnalysisResultsUsage) {
  console.log('‚ùå –û–®–ò–ë–ö–ê: –ù–∞–π–¥–µ–Ω—ã –≤—ã–∑–æ–≤—ã showAnalysisResults:', showAnalysisResultsUsage.length);
  process.exit(1);
} else {
  console.log('‚úÖ showAnalysisResults –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è');
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ showWritingAnalysisResult –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ fallback
const fallbackSection = botContent.match(/ERROR: OpenAI returned empty[\s\S]*?return;/);
if (!fallbackSection) {
  console.log('‚ùå –û–®–ò–ë–ö–ê: –ù–µ –Ω–∞–π–¥–µ–Ω fallback —Ä–∞–∑–¥–µ–ª');
  process.exit(1);
}

const fallbackText = fallbackSection[0];
const hasCorrectFunction = fallbackText.includes('showWritingAnalysisResult');
const hasSessionSetup = fallbackText.includes('session.writingAnalysis = fallbackAnalysis');
const hasStepUpdate = fallbackText.includes("session.step = 'writing_analysis_result'");
const hasGenerateImproved = fallbackText.includes('generateImprovedVersion');

console.log('\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ fallback –∞–Ω–∞–ª–∏–∑–∞:');
console.log('‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è showWritingAnalysisResult:', hasCorrectFunction ? '‚úÖ' : '‚ùå');
console.log('‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ session.writingAnalysis:', hasSessionSetup ? '‚úÖ' : '‚ùå');
console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ step:', hasStepUpdate ? '‚úÖ' : '‚ùå');
console.log('‚úÖ –í—ã–∑–æ–≤ generateImprovedVersion:', hasGenerateImproved ? '‚úÖ' : '‚ùå');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è showWritingAnalysisResult –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞
const functionDefinition = botContent.match(/async function showWritingAnalysisResult\(/);
if (!functionDefinition) {
  console.log('‚ùå –û–®–ò–ë–ö–ê: –§—É–Ω–∫—Ü–∏—è showWritingAnalysisResult –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞');
  process.exit(1);
} else {
  console.log('‚úÖ –§—É–Ω–∫—Ü–∏—è showWritingAnalysisResult –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞');
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É fallback –∞–Ω–∞–ª–∏–∑–∞
const fallbackAnalysisMatch = botContent.match(/const fallbackAnalysis = \{[\s\S]*?\};/);
if (!fallbackAnalysisMatch) {
  console.log('‚ùå –û–®–ò–ë–ö–ê: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ fallbackAnalysis –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  process.exit(1);
}

const fallbackStructure = fallbackAnalysisMatch[0];
const hasRequiredFields = [
  'band_estimate',
  'summary', 
  'global_advice',
  'errors',
  'drills'
].every(field => fallbackStructure.includes(field));

console.log('‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –≤ fallback:', hasRequiredFields ? '‚úÖ' : '‚ùå');

// –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
if (hasCorrectFunction && hasSessionSetup && hasStepUpdate && hasGenerateImproved && hasRequiredFields) {
  console.log('\nüéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´!');
  console.log('‚úÖ Fallback –∞–Ω–∞–ª–∏–∑ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
  console.log('‚úÖ –§—É–Ω–∫—Ü–∏—è showWritingAnalysisResult –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
  console.log('‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ —Ç–∞–∫–∂–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å');
} else {
  console.log('\n‚ùå –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´ - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–¥');
  process.exit(1);
}