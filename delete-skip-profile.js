const { PrismaClient } = require('@prisma/client');

async function deleteSkipWordProfile() {
  const prisma = new PrismaClient();
  
  try {
    // –ù–∞–π–¥–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const users = await prisma.userProfile.findMany();
    console.log('–ù–∞–π–¥–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:');
    users.forEach(user => {
      console.log(`ID: ${user.id}, Telegram ID: ${user.telegramId}, Profile: "${user.profileName}"`);
    });
    
    // –ù–∞–π–¥–µ–º –ø—Ä–æ—Ñ–∏–ª—å "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Å–ª–æ–≤–æ"
    const skipProfile = await prisma.userProfile.findFirst({
      where: { profileName: '‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Å–ª–æ–≤–æ' }
    });
    
    if (skipProfile) {
      console.log(`\n–ù–∞–π–¥–µ–Ω –±–∞–≥-–ø—Ä–æ—Ñ–∏–ª—å: ID ${skipProfile.id}, Telegram ID: ${skipProfile.telegramId}, Profile: "${skipProfile.profileName}"`);
      
      // –£–¥–∞–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å
      await prisma.userProfile.delete({
        where: { id: skipProfile.id }
      });
      console.log('‚úÖ –ë–∞–≥-–ø—Ä–æ—Ñ–∏–ª—å "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Å–ª–æ–≤–æ" —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
    } else {
      console.log('\n‚ùå –ü—Ä–æ—Ñ–∏–ª—å "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Å–ª–æ–≤–æ" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    }
    
    // –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä–∏–º –ø—Ä–æ—Ñ–∏–ª–∏ —Å –ø–æ—Ö–æ–∂–∏–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ (—Å–æ–¥–µ—Ä–∂–∞—â–∏–µ —ç–º–æ–¥–∑–∏)
    const emojiProfiles = await prisma.userProfile.findMany({
      where: {
        profileName: {
          contains: '‚è≠Ô∏è'
        }
      }
    });
    
    if (emojiProfiles.length > 0) {
      console.log('\n–ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ—Ñ–∏–ª–∏ —Å —ç–º–æ–¥–∑–∏:');
      for (const profile of emojiProfiles) {
        console.log(`ID: ${profile.id}, Telegram ID: ${profile.telegramId}, Profile: "${profile.profileName}"`);
        await prisma.userProfile.delete({
          where: { id: profile.id }
        });
        console.log(`‚úÖ –£–¥–∞–ª–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å: "${profile.profileName}"`);
      }
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    console.log('\nüìä –ò—Ç–æ–≥–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:');
    const finalUsers = await prisma.userProfile.findMany();
    finalUsers.forEach(user => {
      console.log(`Telegram ID: ${user.telegramId}, Profile: "${user.profileName}", Study Streak: ${user.studyStreak || 0}, Login Streak: ${user.loginStreak || 0}`);
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

deleteSkipWordProfile();
