require('dotenv').config();

console.log('=== TESTING ANALYSIS STRUCTURE ===\n');

// –ò–º–∏—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç GPT –∞–Ω–∞–ª–∏–∑–∞
const mockGptResponse = {
  "band_estimate": "6.5",
  "summary": "–¢–µ–∫—Å—Ç –ø–æ–Ω—è—Ç–Ω—ã–π –∏ –ª–æ–≥–∏—á–Ω—ã–π, –Ω–æ –µ—Å—Ç—å –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –æ—à–∏–±–∫–∏...",
  "global_advice": "–û—Ç—Ä–∞–±–æ—Ç–∞–π Past Simple –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –≥–ª–∞–≥–æ–ª–æ–≤...",
  "errors": [
    {
      "title": "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –ø—Ä–æ—à–µ–¥—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π (Past Simple)",
      "rule": "–ó–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ –ø—Ä–æ—à–ª–æ–º –≤—ã—Ä–∞–∂–∞—é—Ç—Å—è Past Simple.",
      "meme": "–í—á–µ—Ä–∞? –¢–æ–≥–¥–∞ -ed!",
      "examples": [
        {
          "from": "it stop working",
          "to": "it stopped working",
          "why": "–î–µ–π—Å—Ç–≤–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å –≤ –ø—Ä–æ—à–ª–æ–º ‚Äî –Ω—É–∂–µ–Ω Past Simple —Å -ed."
        }
      ]
    },
    {
      "title": "Comma splice",
      "rule": "–î–≤–∞ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–µ–ª—å–∑—è —Å–æ–µ–¥–∏–Ω—è—Ç—å —Ç–æ–ª—å–∫–æ –∑–∞–ø—è—Ç–æ–π",
      "meme": "–ó–∞–ø—è—Ç–∞—è –æ–¥–Ω–∞ ‚Äî —Å–ª–∞–±–∞—è. –î–∞–π –µ–π –¥—Ä—É–≥–∞: and/so –∏–ª–∏ —Ç–æ—á–∫—É.",
      "examples": [
        {
          "from": "I had a problem, it stop working",
          "to": "I had a problem, and it stopped working"
        }
      ]
    }
  ]
};

console.log('üìã Mock GPT Response:');
console.log('  - band_estimate:', mockGptResponse.band_estimate);
console.log('  - summary length:', mockGptResponse.summary.length);
console.log('  - errors count:', mockGptResponse.errors.length);
console.log('  - errors type:', typeof mockGptResponse.errors);
console.log('  - is array:', Array.isArray(mockGptResponse.errors));

// –¢–µ—Å—Ç–∏—Ä—É–µ–º —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –≤ –∫–≤–∏–∑
console.log('\nüß† Testing quiz generation:');

function testQuizGeneration(analysisData) {
  console.log('\n1. Full analysis object passed:');
  console.log('   - Type:', typeof analysisData);
  console.log('   - Has errors:', !!analysisData.errors);
  console.log('   - Errors type:', typeof analysisData.errors);
  console.log('   - Is array:', Array.isArray(analysisData.errors));

  console.log('\n2. Errors array passed:');
  const errorsArray = analysisData.errors;
  console.log('   - Type:', typeof errorsArray);
  console.log('   - Is array:', Array.isArray(errorsArray));
  console.log('   - Length:', errorsArray?.length);
  
  if (Array.isArray(errorsArray) && errorsArray.length > 0) {
    console.log('   - First error structure:');
    console.log('     * title:', errorsArray[0].title);
    console.log('     * rule:', errorsArray[0].rule);
    console.log('     * examples count:', errorsArray[0].examples?.length);
    
    console.log('\n‚úÖ CORRECT: Pass analysisData.errors to quiz');
  } else {
    console.log('\n‚ùå ERROR: Cannot generate quiz');
  }
}

// –¢–µ—Å—Ç 1: –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
console.log('\nüîç Test 1: Valid GPT response');
testQuizGeneration(mockGptResponse);

// –¢–µ—Å—Ç 2: Fallback —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ 
const fallbackAnalysis = {
  band_estimate: "6.0",
  summary: "Fallback analysis",
  global_advice: "Keep practicing",
  errors: [
    {
      title: "–û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –ø–∏—Å—å–º–∞",
      rule: "–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –≥—Ä–∞–º–º–∞—Ç–∏–∫—É",
      meme: "–ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø–∏—Å—å–º–∞ –ø–æ–º–æ–∂–µ—Ç —É–ª—É—á—à–∏—Ç—å –Ω–∞–≤—ã–∫–∏",
      examples: [
        {
          from: "–ü—Ä–∏–º–µ—Ä –ø—Ä–æ—Å—Ç–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è",
          to: "–ü—Ä–∏–º–µ—Ä —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"
        }
      ]
    }
  ]
};

console.log('\nüîç Test 2: Fallback analysis');
testQuizGeneration(fallbackAnalysis);

console.log('\n=== –í–´–í–û–î ===');
console.log('‚úÖ –í—Å–µ–≥–¥–∞ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≤ –∫–≤–∏–∑: session.stage2_analysis.errors');
console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ —ç—Ç–æ –º–∞—Å—Å–∏–≤ –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π');
console.log('‚úÖ –î–æ–±–∞–≤–∏—Ç—å –æ—Ç–ª–∞–¥–∫—É –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º');