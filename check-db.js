const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function checkDatabase() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    await prisma.$connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL —É—Å–ø–µ—à–Ω–æ');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ñ–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('\nüë• –ü—Ä–æ—Ñ–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:');
    const profiles = await prisma.userProfile.findMany();
    profiles.forEach(p => {
      console.log(`${p.profileName} (ID: ${p.telegramId})`);
      console.log(`  - loginStreak: ${p.loginStreak}`);
      console.log(`  - studyStreak: ${p.studyStreak}`);
      console.log(`  - lastBonusDate: ${p.lastBonusDate}`);
      console.log(`  - lastStudyDate: ${p.lastStudyDate}`);
      console.log(`  - xp: ${p.xp}`);
      console.log('---');
    });
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
    console.error('–î–µ—Ç–∞–ª–∏:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

checkDatabase();
