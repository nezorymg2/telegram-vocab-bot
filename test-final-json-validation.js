// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ JSON —Å mock –¥–∞–Ω–Ω—ã–º–∏

console.log('=== TESTING PERSONALIZED FEEDBACK JSON VALIDATION ===');

// –§—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏–∑ bot.js
function validateAndFixPersonalizedFeedback(response) {
  let improvementResponse = response.trim();
  let improvementData;
  
  try {
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞
    if (!improvementResponse.startsWith('{') || !improvementResponse.endsWith('}')) {
      console.log('    ‚ö†Ô∏è  Response does not start/end with braces, extracting JSON');
      const jsonMatch = improvementResponse.match(/\{[\s\S]*\}/);
      if (jsonMatch) {
        improvementResponse = jsonMatch[0];
      } else {
        throw new Error('No valid JSON structure found');
      }
    }
    
    improvementData = JSON.parse(improvementResponse);
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    if (!improvementData.improved_text || typeof improvementData.improved_text !== 'string') {
      throw new Error('Missing or invalid improved_text field');
    }
    
    if (!improvementData.personalized_feedback || typeof improvementData.personalized_feedback !== 'object') {
      throw new Error('Missing or invalid personalized_feedback field');
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –±–ª–æ–∫–æ–≤ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –æ—Ü–µ–Ω–∫–∏
    const requiredFeedbackBlocks = ['clarity_focus', 'flow_rhythm', 'tone_engagement', 'development_depth', 'precision_ideas'];
    let fixedBlocks = 0;
    
    for (const block of requiredFeedbackBlocks) {
      if (!improvementData.personalized_feedback[block] || typeof improvementData.personalized_feedback[block] !== 'string') {
        console.log(`    üîß Fixed missing/invalid ${block} in personalized_feedback`);
        improvementData.personalized_feedback[block] = "–ê–Ω–∞–ª–∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–∑-–∑–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º.";
        fixedBlocks++;
      }
    }
    
    if (!Array.isArray(improvementData.vocabulary_words)) {
      console.log('    üîß Fixed vocabulary_words (converted to array)');
      improvementData.vocabulary_words = [];
    }
    
    console.log(`    ‚úÖ JSON validation successful (fixed ${fixedBlocks} blocks)`);
    return { success: true, data: improvementData, fixedBlocks };
    
  } catch (e1) {
    console.log(`    ‚ùå Primary validation failed: ${e1.message}`);
    
    // Fallback method 1
    try {
      const jsonMatch = response.match(/\{[\s\S]*\}/);
      if (jsonMatch) {
        let jsonString = jsonMatch[0];
        jsonString = jsonString.replace(/,\s*,/g, ',');
        jsonString = jsonString.replace(/,\s*([}\]])/g, '$1');
        
        improvementData = JSON.parse(jsonString);
        console.log(`    ‚úÖ Fallback method 1 successful`);
        
        // Apply same fixes
        if (!improvementData.personalized_feedback) {
          improvementData.personalized_feedback = {};
        }
        
        const requiredFeedbackBlocks = ['clarity_focus', 'flow_rhythm', 'tone_engagement', 'development_depth', 'precision_ideas'];
        for (const block of requiredFeedbackBlocks) {
          if (!improvementData.personalized_feedback[block]) {
            improvementData.personalized_feedback[block] = "–ê–Ω–∞–ª–∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.";
          }
        }
        
        return { success: true, data: improvementData, fallback: 1 };
      } else {
        throw new Error('JSON not found in response');
      }
    } catch (e2) {
      console.log(`    ‚ùå Fallback method 1 failed: ${e2.message}`);
      
      // Final fallback
      console.log(`    üõ°Ô∏è  Using final fallback data`);
      return {
        success: true,
        data: {
          improved_text: "Sorry, couldn't generate improved version due to technical issues.",
          personalized_feedback: {
            clarity_focus: "–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤–æ–∑–Ω–∏–∫–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å –∞–Ω–∞–ª–∏–∑–æ–º. –†–∞–±–æ—Ç–∞–π—Ç–µ –Ω–∞–¥ —è—Å–Ω–æ—Å—Ç—å—é –ø–æ–∑–∏—Ü–∏–∏.",
            flow_rhythm: "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–∞—Ä—å–∏—Ä–æ–≤–∞—Ç—å –¥–ª–∏–Ω—É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –¥–ª—è –ª—É—á—à–µ–≥–æ —Ä–∏—Ç–º–∞ —Ç–µ–∫—Å—Ç–∞.",
            tone_engagement: "–î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –ª–∏—á–Ω–æ–≥–æ –º–Ω–µ–Ω–∏—è –¥–ª—è –±–æ–ª—å—à–µ–π –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏ —á–∏—Ç–∞—Ç–µ–ª—è.",
            development_depth: "–†–∞–∑–≤–∏–≤–∞–π—Ç–µ –∏–¥–µ–∏ –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏.",
            precision_ideas: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –≤–º–µ—Å—Ç–æ –æ–±—â–∏—Ö —Ñ—Ä–∞–∑."
          },
          vocabulary_words: []
        },
        fallback: 'final'
      };
    }
  }
}

// –¢–µ—Å—Ç–æ–≤—ã–µ —Å–ª—É—á–∞–∏
const testCases = [
  {
    name: "‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π JSON",
    response: `{
  "improved_text": "Today, I would like to discuss the significance of learning English. English serves as a global lingua franca, enabling communication across diverse cultures and nations.",
  "personalized_feedback": {
    "clarity_focus": "–í–∞—à–∏ –∏–¥–µ–∏ —á–µ—Ç–∫–æ –≤—ã—Ä–∞–∂–µ–Ω—ã! –î–ª—è –µ—â–µ –±–æ–ª—å—à–µ–π —è—Å–Ω–æ—Å—Ç–∏ –¥–æ–±–∞–≤—å—Ç–µ —Ç–µ–∑–∏—Å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ.",
    "flow_rhythm": "–û—Ç–ª–∏—á–Ω—ã–π –±–∞–ª–∞–Ω—Å –ø—Ä–æ—Å—Ç—ã—Ö –∏ —Å–ª–æ–∂–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –ø–µ—Ä–µ—Ö–æ–¥–Ω—ã—Ö —Ñ—Ä–∞–∑.",
    "tone_engagement": "–ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–π —Ç–æ–Ω –ø–æ–¥—Ö–æ–¥—è—â–∏–π. –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–∏—á–Ω—ã–π –æ–ø—ã—Ç –¥–ª—è –±–æ–ª—å—à–µ–π —Å–≤—è–∑–∏ —Å —á–∏—Ç–∞—Ç–µ–ª–µ–º.",
    "development_depth": "–ò–¥–µ–∏ —Ä–∞–∑–≤–∏—Ç—ã —Ö–æ—Ä–æ—à–æ. –î–æ–±–∞–≤—å—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–ª–∏ –ø—Ä–∏–º–µ—Ä—ã –¥–ª—è —É–±–µ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.",
    "precision_ideas": "–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä —Å–ª–æ–≤! –í–º–µ—Å—Ç–æ 'very important' –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'crucial' –∏–ª–∏ 'essential'."
  },
  "vocabulary_words": [
    {"word": "significance", "translation": "–∑–Ω–∞—á–∏–º–æ—Å—Ç—å", "example": "The significance of education cannot be overstated."},
    {"word": "lingua franca", "translation": "–æ–±—â–∏–π —è–∑—ã–∫", "example": "English serves as a lingua franca in international business."}
  ]
}`
  },
  
  {
    name: "‚ö†Ô∏è JSON —Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –ø–æ–ª—è–º–∏ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏",
    response: `{
  "improved_text": "English learning is very important in modern world.",
  "personalized_feedback": {
    "clarity_focus": "–í–∞—à–∞ –ø–æ–∑–∏—Ü–∏—è –ø–æ–Ω—è—Ç–Ω–∞, –Ω–æ –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ –∫–æ–Ω–∫—Ä–µ—Ç–∏–∫–∏.",
    "flow_rhythm": "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ—Å—Ç–∞—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–ª–æ–∂–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è."
  },
  "vocabulary_words": []
}`
  },
  
  {
    name: "‚ùå –ü–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–π JSON —Å –ª–∏—à–Ω–∏–º–∏ –∑–∞–ø—è—Ç—ã–º–∏",
    response: `{
  "improved_text": "English is important language.",
  "personalized_feedback": {
    "clarity_focus": "–•–æ—Ä–æ—à–∞—è —è—Å–Ω–æ—Å—Ç—å, –¥–æ–±–∞–≤—å—Ç–µ –ø—Ä–∏–º–µ—Ä—ã.",
    "flow_rhythm": "–ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –Ω—É–∂–Ω–æ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ.",
  },
  "vocabulary_words": [],
}`
  },
  
  {
    name: "üö´ –ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç",
    response: `–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –º–æ–≥—É —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —É–ª—É—á—à–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –∏–∑-–∑–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º.`
  }
];

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
testCases.forEach((testCase, index) => {
  console.log(`\n${index + 1}. ${testCase.name}:`);
  const result = validateAndFixPersonalizedFeedback(testCase.response);
  
  if (result.fallback === 'final') {
    console.log('    üõ°Ô∏è  Used final emergency fallback');
  } else if (result.fallback) {
    console.log(`    üîÑ Used fallback method ${result.fallback}`);
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
  const hasAllFields = result.data.improved_text && 
                      result.data.personalized_feedback &&
                      result.data.personalized_feedback.clarity_focus &&
                      result.data.personalized_feedback.flow_rhythm &&
                      result.data.personalized_feedback.tone_engagement &&
                      result.data.personalized_feedback.development_depth &&
                      result.data.personalized_feedback.precision_ideas &&
                      Array.isArray(result.data.vocabulary_words);
  
  console.log(`    üìä All required fields present: ${hasAllFields ? '‚úÖ' : '‚ùå'}`);
  console.log(`    üìö Vocabulary words: ${result.data.vocabulary_words.length}`);
});

console.log('\n=== VALIDATION SUMMARY ===');
console.log('‚úÖ –°—Ç—Ä–æ–≥–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è JSON —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞');
console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –æ—à–∏–±–æ–∫');
console.log('‚úÖ –ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤—ã–µ fallback –º–µ—Ö–∞–Ω–∏–∑–º—ã');
console.log('‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –ø–æ 5 –∫—Ä–∏—Ç–µ—Ä–∏—è–º');
console.log('‚úÖ –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –≤—Å–µ–≥–¥–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç');
console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É!');

console.log('\nüéØ –§–ò–ù–ê–õ–¨–ù–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢: –°—Ç—Ä–æ–≥–∏–π JSON –ø–∞—Ä—Å–∏–Ω–≥ —Å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –æ—Ü–µ–Ω–∫–æ–π —É—Å–ø–µ—à–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω!');