require('dotenv').config();
const fs = require('fs');

console.log('=== DEBUGGING CALLBACK HANDLER ===\n');

// –ß–∏—Ç–∞–µ–º bot.js –∏ –∏—â–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback
const botContent = fs.readFileSync('bot.js', 'utf8');

// 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ callback_query
const callbackHandlers = botContent.match(/bot\.on\(['"`]callback_query[^'"`]*['"`]/g) || [];
console.log('üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ callback handlers:');
callbackHandlers.forEach((handler, i) => {
  console.log(`  ${i + 1}. ${handler}`);
});

if (callbackHandlers.length === 0) {
  console.log('‚ùå –ù–ï–¢ –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í CALLBACK QUERY!');
} else {
  console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${callbackHandlers.length} –æ–±—Ä–∞–±–æ—Ç—á–∏–∫(–æ–≤)`);
}

// 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–¥–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è add_vocab_ –∏ skip_vocab_
const vocabCallbacks = botContent.match(/add_vocab_|skip_vocab_/g) || [];
console.log(`\nüìö –£–ø–æ–º–∏–Ω–∞–Ω–∏—è vocab callbacks: ${vocabCallbacks.length}`);

// 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Ñ—É–Ω–∫—Ü–∏—è addWordToUserDictionary
const addWordFunction = /async function addWordToUserDictionary/.test(botContent);
console.log(`üìñ –§—É–Ω–∫—Ü–∏—è addWordToUserDictionary: ${addWordFunction ? '‚úÖ' : '‚ùå'}`);

// 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É fallback –∞–Ω–∞–ª–∏–∑–∞
const fallbackMatch = botContent.match(/const fallbackAnalysis = \{[\s\S]*?\};/);
if (fallbackMatch) {
  console.log('\nüîç Fallback –∞–Ω–∞–ª–∏–∑ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É errors...');
  const fallbackText = fallbackMatch[0];
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤ fallback –µ—Å—Ç—å –ø–æ–ª–µ errors –∫–∞–∫ –º–∞—Å—Å–∏–≤
  const hasErrorsArray = /errors:\s*\[/.test(fallbackText);
  console.log(`üìã –ü–æ–ª–µ errors –∫–∞–∫ –º–∞—Å—Å–∏–≤: ${hasErrorsArray ? '‚úÖ' : '‚ùå'}`);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É errors
  if (hasErrorsArray) {
    const errorStructureMatch = fallbackText.match(/{\s*title:/);
    console.log(`üìù –°—Ç—Ä—É–∫—Ç—É—Ä–∞ error —Å title: ${errorStructureMatch ? '‚úÖ' : '‚ùå'}`);
  }
} else {
  console.log('\n‚ùå Fallback –∞–Ω–∞–ª–∏–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω!');
}

console.log('\n=== –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò ===');
console.log('1. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ callback handler –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω');
console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ fallback –∞–Ω–∞–ª–∏–∑ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É errors');
console.log('3. –î–æ–±–∞–≤—å—Ç–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ä–µ–∞–ª—å–Ω—ã–π –±–æ—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏');