// –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç GPT-4o –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–∫—Å—Ç–∞
const axios = require('axios');
require('dotenv').config();

async function quickTestGPT4oAnalysis() {
  console.log('üî• –≠–ö–°–¢–†–ï–ù–ù–´–ô –¢–ï–°–¢: GPT-4o –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–∫—Å—Ç–∞\n');

  const testText = `I think working from home is good. You can save time and money. But it have disadvantages too.`;

  const systemPrompt = `–¢–´: –≠–∫—Å–ø–µ—Ä—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É —Ç–µ–∫—Å—Ç–æ–≤ IELTS Writing Task 2

–ó–ê–î–ê–ß–ê: –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏ –¥–∞—Ç—å –∫—Ä–∞—Ç–∫—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å

–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ô JSON –§–û–†–ú–ê–¢:
{
  "band_estimate": "6.5",
  "summary": "–ö—Ä–∞—Ç–∫–∏–π –æ—Ç–∑—ã–≤ –Ω–∞ —Ä—É—Å—Å–∫–æ–º...",
  "global_advice": "–°–æ–≤–µ—Ç—ã –Ω–∞ —Ä—É—Å—Å–∫–æ–º...",
  "errors": [
    {
      "title": "–ù–∞–∑–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏",
      "rule": "–ü—Ä–∞–≤–∏–ª–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º", 
      "meme": "–ê—Å—Å–æ—Ü–∏–∞—Ü–∏—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º",
      "examples": [{"from": "–û—à–∏–±–∫–∞", "to": "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"}]
    }
  ],
  "drills": []
}`;

  try {
    console.log('üìù –¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç:', testText);
    console.log('\nüöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º GPT-4o...');

    const response = await axios.post('https://api.openai.com/v1/chat/completions', {
      model: 'gpt-4o',
      messages: [
        { role: 'system', content: systemPrompt },
        { role: 'user', content: `LANG=ru\nTEXT=\n${testText}` }
      ],
      temperature: 0.8,
      max_tokens: 2000
    }, {
      headers: {
        'Authorization': `Bearer ${process.env.OPENAI_API_KEY}`,
        'Content-Type': 'application/json'
      },
      timeout: 30000
    });

    const analysisResponse = response.data.choices[0].message.content.trim();
    
    console.log('‚úÖ GPT-4o –æ—Ç–≤–µ—Ç–∏–ª!');
    console.log('üìè –î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞:', analysisResponse.length);
    console.log('üìÑ –û—Ç–≤–µ—Ç:', analysisResponse);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É—Å—Ç–æ—Ç–∞ –ª–∏ –æ—Ç–≤–µ—Ç
    if (!analysisResponse || analysisResponse.length < 10) {
      console.log('‚ùå –ü–£–°–¢–û–ô –û–¢–í–ï–¢ - –±—É–¥–µ—Ç fallback!');
      return;
    }

    // –ü—ã—Ç–∞–µ–º—Å—è –ø–∞—Ä—Å–∏—Ç—å JSON
    let analysisData;
    try {
      analysisData = JSON.parse(analysisResponse);
      console.log('‚úÖ JSON –ø–∞—Ä—Å–∏—Ç—Å—è —É—Å–ø–µ—à–Ω–æ!');
      console.log('üéØ –û—Ü–µ–Ω–∫–∞:', analysisData.band_estimate);
      console.log('üìù –û—Ç–∑—ã–≤:', analysisData.summary?.substring(0, 100) + '...');
      console.log('üîç –û—à–∏–±–æ–∫:', analysisData.errors?.length || 0);
    } catch (parseError) {
      try {
        const jsonMatch = analysisResponse.match(/\{[\s\S]*\}/);
        if (jsonMatch) {
          analysisData = JSON.parse(jsonMatch[0]);
          console.log('‚úÖ JSON –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–∫—Å—Ç–µ –∏ –ø–∞—Ä—Å–∏—Ç—Å—è!');
        } else {
          console.log('‚ùå JSON –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ');
        }
      } catch (e) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON:', e.message);
      }
    }

    console.log('\nüéâ –†–ï–ó–£–õ–¨–¢–ê–¢: GPT-4o –†–ê–ë–û–¢–ê–ï–¢ –î–õ–Ø –ê–ù–ê–õ–ò–ó–ê!');

  } catch (error) {
    console.error('‚ùå –û–®–ò–ë–ö–ê:', error.message);
    if (error.response) {
      console.error('–°—Ç–∞—Ç—É—Å:', error.response.status);
      console.error('–î–∞–Ω–Ω—ã–µ:', error.response.data);
    }
  }
}

quickTestGPT4oAnalysis().catch(console.error);