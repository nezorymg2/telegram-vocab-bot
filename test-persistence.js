const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function testStreakPersistence() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ streak –¥–∞–Ω–Ω—ã—Ö...');
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    const beforeUpdate = await prisma.userProfile.findFirst({
      where: { 
        telegramId: "930858056",
        profileName: "–ù—É—Ä–±–æ–ª–∞—Ç"
      }
    });
    
    console.log('üìä –î–û –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:');
    console.log(`  loginStreak: ${beforeUpdate.loginStreak}`);
    console.log(`  studyStreak: ${beforeUpdate.studyStreak}`);
    console.log(`  lastBonusDate: ${beforeUpdate.lastBonusDate}`);
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ (–∫–∞–∫ –±—É–¥—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª –±–æ–Ω—É—Å)
    await prisma.userProfile.updateMany({
      where: { 
        telegramId: "930858056",
        profileName: "–ù—É—Ä–±–æ–ª–∞—Ç"
      },
      data: {
        loginStreak: beforeUpdate.loginStreak + 1,
        lastBonusDate: new Date().toDateString(),
        xp: beforeUpdate.xp + 50
      }
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å
    const afterUpdate = await prisma.userProfile.findFirst({
      where: { 
        telegramId: "930858056",
        profileName: "–ù—É—Ä–±–æ–ª–∞—Ç"
      }
    });
    
    console.log('\nüìä –ü–û–°–õ–ï –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:');
    console.log(`  loginStreak: ${afterUpdate.loginStreak}`);
    console.log(`  studyStreak: ${afterUpdate.studyStreak}`);
    console.log(`  lastBonusDate: ${afterUpdate.lastBonusDate}`);
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    await prisma.userProfile.updateMany({
      where: { 
        telegramId: "930858056",
        profileName: "–ù—É—Ä–±–æ–ª–∞—Ç"
      },
      data: {
        loginStreak: beforeUpdate.loginStreak,
        lastBonusDate: beforeUpdate.lastBonusDate,
        xp: beforeUpdate.xp
      }
    });
    
    console.log('\n‚úÖ –î–∞–Ω–Ω—ã–µ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é');
    console.log('‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω - –º–µ—Ö–∞–Ω–∏–∑–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

testStreakPersistence();
