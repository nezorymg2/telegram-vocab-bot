// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö —Ç–∞–±–ª–∏—Ü –∏ –∫–æ–ª–æ–Ω–æ–∫, –∞ –∑–∞—Ç–µ–º –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
require('dotenv').config({ path: __dirname + '/.env' });
const prisma = require('./database');

async function setupAndCorrectDatabase() {
  try {
    console.log('üîß –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ö–µ–º—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...\n');

    console.log('üìã –®–∞–≥ 1: –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É bothMissedDays...');
    try {
      await prisma.$executeRaw`
        ALTER TABLE "money_system" 
        ADD COLUMN IF NOT EXISTS "bothMissedDays" INTEGER DEFAULT 0
      `;
      console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ bothMissedDays –¥–æ–±–∞–≤–ª–µ–Ω–∞');
    } catch (error) {
      console.log('‚ÑπÔ∏è  –ö–æ–ª–æ–Ω–∫–∞ bothMissedDays —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞:', error.message);
    }

    console.log('\nüìã –®–∞–≥ 2: –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É shared_bank...');
    try {
      await prisma.$executeRaw`
        CREATE TABLE IF NOT EXISTS "shared_bank" (
          "id" SERIAL PRIMARY KEY,
          "totalAmount" INTEGER DEFAULT 0,
          "lastUpdated" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
          "month" VARCHAR(7) NOT NULL DEFAULT (TO_CHAR(CURRENT_DATE, 'YYYY-MM'))
        )
      `;
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ shared_bank —Å–æ–∑–¥–∞–Ω–∞');
    } catch (error) {
      console.log('‚ÑπÔ∏è  –¢–∞–±–ª–∏—Ü–∞ shared_bank —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞:', error.message);
    }

    console.log('\nüìã –®–∞–≥ 3: –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ–≥–ª–∞—Å–Ω–æ —Ä–µ–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ...');

    // –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
    console.log('–ê–º–∏–Ω–∞ –ø—Ä–æ—à–ª–∞: 2,3,7,8,9 –æ–∫—Ç—è–±—Ä—è (5 –¥–Ω–µ–π)');
    console.log('–ê–º–∏–Ω–∞ –ø—Ä–æ–ø—É—Å—Ç–∏–ª–∞: 6 –æ–∫—Ç—è–±—Ä—è (1 –¥–µ–Ω—å) ‚Üí +1000 —Ç–≥ –ù—É—Ä–±–æ–ª–∞—Ç—É');
    console.log('–ù—É—Ä–±–æ–ª–∞—Ç –ø—Ä–æ—à–µ–ª: 2,3,6,7,8,9 –æ–∫—Ç—è–±—Ä—è (6 –¥–Ω–µ–π)');
    console.log('–û–±–∞ –ø—Ä–æ–ø—É—Å—Ç–∏–ª–∏: 4,5 –æ–∫—Ç—è–±—Ä—è (2 –¥–Ω—è) ‚Üí 4000 —Ç–≥ –≤ –±–∞–Ω–∫');

    // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Å—É–º–º—ã:
    const correctData = {
      amina: {
        totalEarned: 5000,    // 5 –¥–Ω–µ–π √ó 1000
        totalOwed: 1000,      // –¥–æ–ª–∂–Ω–∞ –ù—É—Ä–±–æ–ª–∞—Ç—É –∑–∞ 6 –æ–∫—Ç—è–±—Ä—è  
        dailyCompletions: 5,  // –ø—Ä–æ—à–ª–∞ 5 –¥–Ω–µ–π
        dailyMissed: 1,       // –ø—Ä–æ–ø—É—Å—Ç–∏–ª–∞ 1 –¥–µ–Ω—å (6 –æ–∫—Ç—è–±—Ä—è)
        bothMissedDays: 2     // 4,5 –æ–∫—Ç—è–±—Ä—è
      },
      nurbolat: {
        totalEarned: 7000,    // 6000 –∑–∞ —Å–≤–æ–∏ –¥–Ω–∏ + 1000 –∑–∞ –ø—Ä–æ–ø—É—Å–∫ –ê–º–∏–Ω—ã
        totalOwed: 0,         // –Ω–∏—á–µ–≥–æ –Ω–µ –¥–æ–ª–∂–µ–Ω
        dailyCompletions: 6,  // –ø—Ä–æ—à–µ–ª 6 –¥–Ω–µ–π  
        dailyMissed: 0,       // –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞–ª (–∫–æ–≥–¥–∞ –æ–±–∞ –ø—Ä–æ–ø—É—Å–∫–∞–ª–∏ - –Ω–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è)
        bothMissedDays: 2     // 4,5 –æ–∫—Ç—è–±—Ä—è
      }
    };

    console.log('\nüí∞ –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ê–º–∏–Ω—ã...');
    await prisma.$executeRaw`
      UPDATE "money_system" SET 
        "totalEarned" = ${correctData.amina.totalEarned},
        "totalOwed" = ${correctData.amina.totalOwed},
        "dailyCompletions" = ${correctData.amina.dailyCompletions},
        "dailyMissed" = ${correctData.amina.dailyMissed},
        "bothMissedDays" = ${correctData.amina.bothMissedDays},
        "updatedAt" = CURRENT_TIMESTAMP
      WHERE "profileName" = '–ê–º–∏–Ω–∞'
    `;

    console.log('üí∞ –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ù—É—Ä–±–æ–ª–∞—Ç–∞...');
    await prisma.$executeRaw`
      UPDATE "money_system" SET 
        "totalEarned" = ${correctData.nurbolat.totalEarned},
        "totalOwed" = ${correctData.nurbolat.totalOwed},
        "dailyCompletions" = ${correctData.nurbolat.dailyCompletions},
        "dailyMissed" = ${correctData.nurbolat.dailyMissed},
        "bothMissedDays" = ${correctData.nurbolat.bothMissedDays},
        "updatedAt" = CURRENT_TIMESTAMP
      WHERE "profileName" = '–ù—É—Ä–±–æ–ª–∞—Ç'
    `;

    console.log('üè¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–Ω–∫ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π...');
    const currentMonth = new Date().toISOString().substring(0, 7); // 2025-10
    
    // –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
    await prisma.$executeRaw`
      DELETE FROM "shared_bank" WHERE "month" = ${currentMonth}
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∑–∞–ø–∏—Å—å
    await prisma.$executeRaw`
      INSERT INTO "shared_bank" ("totalAmount", "month", "lastUpdated")
      VALUES (4000, ${currentMonth}, CURRENT_TIMESTAMP)
    `;

    console.log('\n‚úÖ –í—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç:');
    const records = await prisma.$queryRaw`SELECT * FROM "money_system" ORDER BY "profileName"`;
    const bank = await prisma.$queryRaw`SELECT * FROM "shared_bank" WHERE "month" = ${currentMonth}`;

    console.log('\nüìä –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    records.forEach(record => {
      console.log(`${record.profileName}:`);
      console.log(`  ‚úÖ –ó–∞—Ä–∞–±–æ—Ç–∞–ª: ${record.totalEarned.toLocaleString()} —Ç–≥`);
      console.log(`  ‚ùå –î–æ–ª–∂–µ–Ω: ${record.totalOwed.toLocaleString()} —Ç–≥`);
      console.log(`  üìÖ –ó–∞–≤–µ—Ä—à–∏–ª: ${record.dailyCompletions} –¥–Ω–µ–π`);
      console.log(`  ‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏–ª: ${record.dailyMissed} –¥–Ω–µ–π`);
      console.log(`  üë• –û–±–∞ –ø—Ä–æ–ø—É—Å—Ç–∏–ª–∏: ${record.bothMissedDays} –¥–Ω–µ–π\n`);
    });

    if (bank.length > 0) {
      console.log(`üè¶ –ë–∞–Ω–∫ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π: ${bank[0].totalAmount.toLocaleString()} —Ç–≥ (–º–µ—Å—è—Ü: ${bank[0].month})`);
    }

    console.log('\nüéâ –¢–µ–ø–µ—Ä—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–º –¥–∞–Ω–Ω—ã–º!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

setupAndCorrectDatabase();