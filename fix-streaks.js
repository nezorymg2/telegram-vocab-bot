const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function fixStreakData() {
  try {
    console.log('üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ streak...');
    
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    const profiles = await prisma.userProfile.findMany();
    console.log('\nüìä –¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ:');
    profiles.forEach(p => {
      console.log(`${p.profileName || 'Unknown'} (ID: ${p.telegramId}): login=${p.loginStreak}, study=${p.studyStreak}`);
    });
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ê–º–∏–Ω—ã (telegramId: "1131806675")
    // –£ –Ω–µ—ë 2 –ø—Ä–æ—Ñ–∏–ª—è - —É–¥–∞–ª–∏–º –¥—É–±–ª–∏–∫–∞—Ç –∏ –∏—Å–ø—Ä–∞–≤–∏–º –æ—Å–Ω–æ–≤–Ω–æ–π
    const aminaProfiles = await prisma.userProfile.findMany({
      where: { telegramId: "1131806675" }
    });
    
    if (aminaProfiles.length > 0) {
      console.log(`\nüîß –ù–∞–π–¥–µ–Ω–æ ${aminaProfiles.length} –ø—Ä–æ—Ñ–∏–ª–µ–π –¥–ª—è –ê–º–∏–Ω—ã`);
      
      // –û—Å—Ç–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ
      const mainProfile = aminaProfiles[0];
      await prisma.userProfile.update({
        where: { id: mainProfile.id },
        data: {
          loginStreak: 4,
          studyStreak: 4,
          lastBonusDate: 'Mon Jul 28 2025', // –í—á–µ—Ä–∞, —á—Ç–æ–±—ã —Å–µ–≥–æ–¥–Ω—è –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å –∏ —É–≤–µ–ª–∏—á–∏—Ç—å –¥–æ 5
          lastStudyDate: 'Mon Jul 28 2025',
          profileName: '–ê–º–∏–Ω–∞' // –£–±–µ–¥–∏–º—Å—è —á—Ç–æ –∏–º—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ
        }
      });
      
      // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
      if (aminaProfiles.length > 1) {
        for (let i = 1; i < aminaProfiles.length; i++) {
          await prisma.userProfile.delete({
            where: { id: aminaProfiles[i].id }
          });
          console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω –¥—É–±–ª–∏–∫–∞—Ç –ø—Ä–æ—Ñ–∏–ª—è ${aminaProfiles[i].id}`);
        }
      }
      
      console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –ê–º–∏–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const updatedProfiles = await prisma.userProfile.findMany();
    console.log('\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:');
    updatedProfiles.forEach(p => {
      console.log(`${p.profileName || 'Unknown'} (ID: ${p.telegramId}): login=${p.loginStreak}, study=${p.studyStreak}`);
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

fixStreakData();
