// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å bot.js –±–µ–∑ –∑–∞–ø—É—Å–∫–∞
const fs = require('fs');

console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å bot.js...\n');

try {
  // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –±–æ—Ç–∞
  const botCode = fs.readFileSync('./bot.js', 'utf8');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
  console.log('1. ‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /words:');
  const hasStats = botCode.includes('const totalWords = words.length;') && 
                   botCode.includes('const newWords = words.filter') &&
                   botCode.includes('üî¥ –ù–æ–≤—ã–µ: ${newWords}');
  console.log(`   –î–æ–±–∞–≤–ª–µ–Ω–∞: ${hasStats}`);

  console.log('\n2. ‚úÖ –†–∞–∑–±–∏–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π:');
  const hasMessageSplit = botCode.includes('let messages = [];') && 
                          botCode.includes('if ((currentMessage + sectionHeader + wordLine).length > 3500)');
  console.log(`   –î–æ–±–∞–≤–ª–µ–Ω–∞: ${hasMessageSplit}`);

  console.log('\n3. ‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–ª–æ–≤ –ø—Ä–∏ –ø—Ä–æ–ø—É—Å–∫–µ Stage 2:');
  const hasSkipSave = botCode.includes('session.stage2VocabularyWords = words.map') && 
                      botCode.includes('DEBUG: Saved') &&
                      botCode.includes('when skipping Stage 2');
  console.log(`   –î–æ–±–∞–≤–ª–µ–Ω–æ: ${hasSkipSave}`);

  console.log('\n4. ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–æ–≥–∏–∫–∏ finishSmartRepeat:');
  const hasFixedLogic = botCode.includes('const savedVocabularyWords = session.stage2VocabularyWords || [];') && 
                        botCode.includes('startVocabularyAdditionStage5(ctx, session, savedVocabularyWords)');
  console.log(`   –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: ${hasFixedLogic}`);

  // –ü—Ä–æ–≤–µ—Ä–∏–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å JavaScript
  console.log('\n5. üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ JavaScript...');
  try {
    new Function(botCode);
    console.log('   ‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω');
  } catch (syntaxError) {
    console.log(`   ‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞: ${syntaxError.message}`);
  }

  console.log('\nüéØ –†–µ–∑—é–º–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π:');
  console.log('   ‚úÖ –ö–æ–º–∞–Ω–¥–∞ /words —Ç–µ–ø–µ—Ä—å –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ —Ä–∞–∑–±–∏–≤–∞–µ—Ç—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
  console.log('   ‚úÖ –ü—Ä–∏ –ø—Ä–æ–ø—É—Å–∫–µ Stage 2 —Å–ª–æ–≤–∞ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –¥–ª—è Stage 5');
  console.log('   ‚úÖ –õ–æ–≥–∏–∫–∞ finishSmartRepeat –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ - —Å–ª–æ–≤–∞ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –¥–æ –æ—á–∏—Å—Ç–∫–∏');
  console.log('   ‚úÖ –î–∞—Ç–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–±—Ä–æ—à–µ–Ω–∞');
  
  if (hasStats && hasMessageSplit && hasSkipSave && hasFixedLogic) {
    console.log('\nüöÄ –í–°–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–ò–ú–ï–ù–ï–ù–´! –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é.');
  } else {
    console.log('\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–≥—É—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å.');
  }

} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ñ–∞–π–ª–∞:', error.message);
}